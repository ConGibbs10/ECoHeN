% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genlouvain.R
\name{genlouvain}
\alias{genlouvain}
\title{Generalized Louvain optimization}
\source{
https://github.com/netZoo/netZooR/blob/master/R/ALPACA.R
}
\usage{
genlouvain(B)
}
\arguments{
\item{B}{Symmetric modularity matrix}
}
\value{
The community membership vector
}
\description{
Generalized Louvain optimization
}
\details{
This function implements the Louvain optimization scheme on a general symmetric matrix. First, nodes are all placed in separate communities, and merged iteratively according to which merge moves result in the greatest increase in the modularity sum. Note that nodes are iterated in the order of the input matrix (not randomly) so that all results are reproducible. Second, the final community membership is used to form a meta network whose nodes represent communities from the previous step, and which are connected by effective edge weights. The merging process is then repeated on the meta network. These two steps are repeated until the modularity sum does not increase more than a very small tolerance factor.
}
\keyword{internal}
